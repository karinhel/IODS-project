testi1 <- ggplot(Muuthaku, aes(v5, tulos)) + filter=mean(Muuthaku$v5) + theme_minimal() + geom_count(colour="blue")
p <- plot(x, keskarvo, type="o", col="blue", ann=F, axes=F)
keskarvo <- mean(Muuthaku$v5)
keskarvo <- mean(tulos)
str(keskarvo)
summary(keskarvo)
head(keskarvo)
tulos
attach(Muuthaku)
mytable <- table(v5, tulos)
mytable
prop.table(mytable, 1)
hyv <- c(0.10416667, 0.43678161, 0.82758621, 0.93333333)
hyv
names(hyv) <- c("Rang.määr.", "AO:n tuomio", "HO:n tuomio", "KKO:n tuomio")
hyv
testi1 <- ggplot(Muuthaku, aes(v5, hyv))
testi1 + geom_dotplot()
testi1 <- ggplot(Muuthaku, aes(v5, hyv))
testi1 + geom_dotplot()
testi1 <- ggplot(Muuthaku, aes(hyv, tulos))
testi1 + geom_dotplot()
testi1 <- ggplot(aes(hyv, tulos))
testi1 + geom_dotplot()
plot(hyv)
qplot(hyv)
plot(hyv)
ggplot(hyv, aes(hyv))
ggplot(hyv, aes(hyv)) + geom_dotplot()
ggplot(aes(hyv)) + geom_dotplot()
axis(2, at=0:1, c(0, 0.2, 0.4, 0.8, 1))
axis(2, las=1 at=0:1:c(0, 0.2, 0.4, 0.8, 1))
axis(2, at=0:1:c(0, 0.2, 0.4, 0.8, 1))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
plot(hyv, col="blue", ann=F, axes=F)
plot(hyv, col="blue", ann=T, axes=F)
plot(hyv, col="blue", ann=F, axes=F)
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
title(xlab="Hakemuksen kohteena ollut ratkaisu", col.lab=rgb(0,0.5,0))
title(ylab="Hväksyttyjen hakemusten keskiarvo", col.lab=rgb(0,0.5,0))
axis(2, at=0:1)
box()
10/4
axis(2, at=0:1, lab=c(0, 0.3, 0.6, 1))
title(xlab="Hakemuksen kohteena ollut ratkaisu")
title(ylab="Hväksyttyjen hakemusten keskiarvo")
p <- function(hyv)
p
p
plot(p)
plot(hyv, col="blue)
plot(hyv, col="blue)
plot(hyv, col="blue")
plot(hyv, col="blue", ylim=c(0,1))
title(cex.lab=0.75)
title(xlab("Muutoksenhaun kohde"), ylab("Ratkaisun lopputulos") cex.lab=0.75)
title(xlab="Muutoksenhaun kohde", ylab="Ratkaisun lopputulos", cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Ratkaisun lopputulos")
title(cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Ratkaisun lopputulos", cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen osuus",
cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen osuus",
cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75)
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio")))
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75,
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio")) )
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75)
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75, xaxt="n")
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75, type="o", xaxt="n")
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
Muuthaku = read.spss("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\KANDI\\Asenteet.sav", to.data.frame=TRUE)
library(foreign)
Muuthaku = read.spss("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\KANDI\\Asenteet.sav", to.data.frame=TRUE)
library(ggplot2)
install.packages("GGally")
library(GGally)
anova(malliglm2, test="Chisq")
tulos <- Muuthaku$v7_u - 1
tulos
malliglm2 <- glm(tulos ~ bv9, data = Muuthaku, family = binomial())
anova(malliglm2, test="Chisq")
library(pROC)
prf <- performance(malliglm2, measure = "tpr", x.measure = "fpr")
install.packages('ROCR')
library(ROCR)
prf <- performance(malliglm2, measure = "tpr", x.measure = "fpr")
alc <- read.table(file= "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", header=T, sep=",")
colnames(alc)
library(tidyr);library(dplyr);library(ggplot2)
str(alc_use)
str(alc$alc_use)
summary(alc$alc_use)
plot(Log)
Log <- glm(high_use ~ goout + famrel + studytime + sex, data = alc, family = "binomial")
summary(Log)
plot(Log)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)   }
loss_func(class = alc$high_use, prob = alc$probability)
probabilities <- predict(Log, type = "response")
alc <- mutate(alc, probability = probabilities)
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
probabilities <- predict(Log, type = "response")
loss_func(class = alc$high_use, prob = alc$probabilities)
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probabilities > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)   }
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
library(tidyr);library(dplyr);library(ggplot2)
Log <- glm(high_use ~ goout + famrel + studytime + sex, data = alc, family = "binomial")
summary(Log)
library(tidyr);library(dplyr);library(ggplot2)
OR <- coef(Log) %>% exp
CI <- confint(Log) %>% exp
OR <- coef(Log) %>% exp
CI <- confint(Log) %>% exp
cbind(OR, CI)
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func(class = alc$high_use, prob = alc$probability)
setwd("~/opiskelulv16-17/IODS-k17/GitHub/IODS-project/Data")
read.csv("human.cvs", header=T, sep=",")
read.table("human.cvs", header=T, sep=",")
read.csv(human.csv, header = T, sep=",")
read.csv("human.csv", header = T, sep=",")
Human <- read.csv("human.csv", header = T, sep=",")
human <- read.csv("human.csv", header = T, sep=",")
dim(human)
str(human)
View(human)
human <- read.csv("human.csv", header = F, sep=",")
human <- read.csv("human.csv", header = T, sep=",")
read.csv("human")
human <- read.csv("human.csv", header = T, sep=",")
str(human)
human <- read.csv("human.csv")
str(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv",
stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv",
stringsAsFactors = F, na.strings = "..")
#exploring the datas
dim(hd)
dim(gii)
str(hd)
str(gii)
#the human development data has 195 observations of 8 variables and the ohter data that is about
#   gender inequality has also 195 obs of 10 variables.
# Some summaries to see before wrangling with the datas
summary(hd)
summary(gii)
# Renaming the variables at the datasets
hd_new <- c("HDI_Rank", "Country", "HDI_Cap", "Life_Expectancy", "Exp_education_years", "Mean_education_years",
"GNI_Cap", "GNI.HDI_Rank")
gii_new <- c("GII_Rank", "Country", "GII", "Mat.mor_Ratio", "Birth_Rate", "Parlament.rep_%", "Second.Edu_F",
"Second.Edu_M", "Labour.Part_F", "Labour.Part_M")
colnames(hd) <- hd_new
# See that it worked;
colnames(hd)
colnames(gii) <- gii_new
colnames(gii)
#Lets then mutate the "Gender inequality" data by creating two new variables.
library(dplyr)
#First variable: Edu2_Ratio
#   --> the ratio of Female and Male populations with secondary education in each country.
gii <- mutate(gii, Edu2_Ratio= Second.Edu_F / Second.Edu_M)
# Second variable:
#   --> the ratio of labour force participation of females and males in each country.
gii <- mutate(gii, Lab_Ratio = Labour.Part_F / Labour.Part_M)
# Aand we have the new variables;
str(gii)
# Joining the data sets! Let's use the variable "country" as an identifier
human <- inner_join(hd, gii, by = "Country", suffix=c(".hd",".gii"))
colnames(human)
glimpse(human)
colnames(human)
human <- mutate(human, -X)
human
human <- read.csv("human.csv")
human <- dplyr::select(human, -X)
colnames(human)
library(stringr)
as.numeric(human$GNI)
human$GNI
as.numeric(human$GNI_Cap)
human$GNI
str(human$GNI_Cap)
str(human)
as.numeric(human$GNI_Cap)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv",
stringsAsFactors = F)
str(hd)
as.numeric(hd$Gross.National.Income..GNI..per.Capita)
str(human)
colnames(human) #worked!
keep_columns <- c("Country", "Edu2_Ratio", "Lab_Ratio", "Exp_education_years", "Life_Expectancy", "GNI_Cap", "Mat.mor_Ratio", "Birth_Rate", "Parlament.rep_.")
human <- select(human, one_of(keep_columns))
str(human)
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human2 <- filter(human, comp==T)
data.frame(human[-1], comp = complete.cases(human))
human2 <- filter(human, comp==T)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human2 <- filter(human, comp==T)
human2 <- filter(human, human$comp==T)
human2 <- filter(human, comp==T)
comp <- complete.cases(human)
human2 <- filter(human, comp==T)
human2
tail(human, 10)
last <- nrow(human) - 7
human2 <- human[1:last,]
rownames(human2) <- human2$Country
human2
str(human2)
human2 <- dplyr::select(human2, -Country)
str(human2)
View(human2)
comp <- complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human2 <- filter(human, comp==T)
comp <- complete.cases(human2)
data.frame(human2[-1], comp = complete.cases(human2))
human2 <- filter(human2, comp==T)
human2
tail(human, 10)
last <- nrow(human) - 7
human2 <- human[1:last,]
human2 <- human[1:last,]
rownames(human2) <- human2$Country
human2 <- dplyr::select(human2, -Country)
str(human2)
human$Country
tail(human$Country)
tail(human$Country, 10)
last <- nrow(human) - 7
tail(human2$Country, 10)
tail(human$Country, 10)
last <- nrow(human) - 7
human <- human[1:last,]
rownames(human2) <- human2$Country
str(human2)
human <- select(human, one_of(keep_columns))
str(human)  #Worked!
comp <- complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human2 <- filter(human, comp==T)
human2
str(human2)
rownames(human2) <- human2$Country
View(human2)
human2 <- dplyr::select(human2, -Country)
str(human2)
write.csv(human2, file="human.csv", row.names = T)
read.csv(human)
read.csv("human")
human <- read.csv("human.csv")
setwd("~/opiskelulv16-17/IODS-k17/GitHub/IODS-project/Data")
human <- read.csv("human.csv", header = T, sep=",")
human <- read.table("human.csv", header = T, sep=",")
human <- read.table("human.csv", header = T, sep=",", row.names = T)
human <- read.csv("human.csv", header = T, sep=",", row.names = T)
human <- read.csv(human.csv, header = T, sep=",", row.names = T)
human <- read.csv("human.csv", header = T, sep=",", row.names = T)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", header = T, sep=",", row.names = T)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", header = T, sep=",")
str(human)
dim(human)
str(human)
library(ggplot2)
ggpairs(human, col="darkorchid1")
library(GGally)
ggpairs(human, col="darkorchid1")
ggpairs(human)
ggpairs(human, col="red")
ggpairs(human, aes(col="red")
ggpairs(human, aes(col="red"))
ggpairs(human)
summary(human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
human_std <- scale(human)
summary(human_std)
pca_human2 <- prcomp(human_std)
biplot(pca_human2, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
install.packages(Factominer)
install.packages(FactoMineR)
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
str(tea)
dim(tea)
install.packages("FactoMineR")
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
ggpairs(human)
p <- ggpairs(human, mapping = aes(col="red", alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(human, mapping = aes(col="darkorchid1", alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(human, mapping = aes(col="red", alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
corr(human, Mat.Mor, GNI)
cor_matrix<-cor(human) %>% round(digits=2)
cor_matrix
p2 <- ggplot(human, aes(x=GNI, y= Mat.Mor, col="red")) + geom_point()
p2
p2 <- ggplot(human, aes(x=GNI, y= Mat.Mor)) + geom_point(col="red")
p2
p2 <- ggplot(human, aes(x=GNI, y= Mat.Mor)) + geom_point(col="darkorchid1")
p2
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.6, 2), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(1, 0.8), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.6, 0.6), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.4, 0.4), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 0.4), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 0.5), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 0.8), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 2), col = c("grey40", "deeppink2"))
biplot(pca_human2, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
biplot(pca_human2, choices = 1:2, cex = c(0.6, 1), col = c("grey40", "deeppink2"))
biplot(pca_human2, choices = 1:2, cex = c(0.6, 1.2), col = c("grey40", "deeppink2"))
summary(pca_human2)
biplot(pca_human2, choices = 1:2, cex = c(0.6, 1.2), col = c("grey40", "deeppink2"))
?biplot
biplot(pca_human2, choices = 1:2, cex = c(0.6, 1.2), col = c("grey40", "deeppink2"), main="Biplot of the first two principal components for the 'human' data")
biplot(pca_human2, choices = 1:2, cex = c(0.6, 1.2), col = c("grey40", "deeppink2"), main="Biplot of the first two principal components for the 'human' data", xlab="PC1 (54%)", ylab="PC2 (16%)")
pair(tea)
pairs(tea)
str(tea)
keep <- c("breakfast", "Tea", "How", "age", "frequency")
teatime <- select(tea, one_of(keep))
str(teatime)
ggpairs(teatime, aes(col="darkorchid1"))
ggpairs(teatime, aes(col="darkpink2"))
p3 <- ggpairs(teatime, mapping = aes(col="deeppink2", alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p3
p3 <- ggpairs(teatime, mapping = aes(col="red", alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p3
p3 <- ggpairs(teatime, mapping = aes( alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p3
pairs(teatime)
g1 <- ggplot(teatime, breakfast) + geom_bar(col="darkpink2")
g1 <- ggplot(teatime, aes(breakfast) + geom_bar(col="darkpink2")
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(col="darkpink2")
g1 <- ggplot(teatime, aes(breakfast))
g1 + geom_bar(col="darkpink2")
g1 + geom_bar(col="red")
g1 <- ggplot(teatime, aes(breakfast, col="darkpink2"))
g1 + geom_bar()
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar()
multiplot(g1 + g2 + g3 + g4 + g5)
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar()
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()
g3 <- ggplot(teatime, aes(How)) + geom_bar()
g4 <- ggplot(teatime, aes(age)) + geom_bar()
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()
multiplot(g1 + g2 + g3 + g4 + g5, cols=3)
multiplot(g1, g2, g3, g4, g5, cols=3)
multiplot(g1, g2, g3, g4, g5, cols=2)
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(aes(fill = fl))) +  + theme_bw()
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(aes(fill = fl)) +  + theme_bw()
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(aes(fill = fl)) + theme_bw()
g1
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar() + scale_fill_brewer(
palette = "Blues") + theme_bw()
g1
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar() + theme_bw()
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_bw()
g3 <- ggplot(teatime, aes(How)) + geom_bar()+ theme_bw()
g4 <- ggplot(teatime, aes(age)) + geom_bar()+ theme_bw()
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_bw()
multiplot(g1, g2, g3, g4, g5, cols=3, col="darkorchid1")
g1 <- ggplot(teatime, aes(breakfast, col="red")) + geom_bar() + theme_bw()
g1
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(colors(darkorchid1)) + theme_bw()
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(colors("darkorchid1")) + theme_bw()
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(color="darkorchid1") + theme_bw()
g1
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar(color="darkpink2") + theme_bw()
g2 <- ggplot(teatime, aes(Tea)) + geom_bar(color="darkpink2")+ theme_bw()
g3 <- ggplot(teatime, aes(How)) + geom_bar(color="darkpink2")+ theme_bw()
g4 <- ggplot(teatime, aes(age)) + geom_bar(color="darkpink2")+ theme_bw()
g5 <- ggplot(teatime, aes(frequency)) + geom_bar(color="darkpink2")+ theme_bw()
multiplot(g1, g2, g3, g4, g5, cols=3)
library(dplyr)
g4 <- ggplot(teatime, aes(age)) + geom_area(stat = "bin")+ theme_bw()
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar() + theme_bw()
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_bw()
g3 <- ggplot(teatime, aes(How)) + geom_bar()+ theme_bw()
g4 <- ggplot(teatime, aes(age)) + geom_area(stat = "bin")+ theme_bw()
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_bw()
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar() + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar() + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g3 <- ggplot(teatime, aes(How)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4 <- ggplot(teatime, aes(age)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, g5, cols=3)
mca <- MCA(teatime, graph = FALSE)
mca <- MCA(teatime, graph = FALSE)
mca <- MCA(teatime, graph = FALSE)
mca <- MCA(teatime)
mca <- MCA(tea)
MCA(teatime)
library(FactoMineR)
MCA(teatime)
mca <- MCA(X = teatime, graph=F)
?MCA
keep <- c("breakfast", "Tea", "How", "age_Q", "frequency")
teatime <- select(tea, one_of(keep))
str(teatime)
mca <- MCA(X = teatime, graph=F)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
g1 <- ggplot(teatime, aes(breakfast)) + geom_bar() + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g3 <- ggplot(teatime, aes(How)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4 <- ggplot(teatime, aes(age_Q)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, g5, cols=3)
biplot(mca, choices = 1:2, cex = c(0.6, 1.2), col = c("grey40", "deeppink2"))
plot(mca, invisible=c("ind"), habillage = "quali")
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
human_std <- scale(human)
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
library(dplyr)
library(ggplot2)
library(GGally)
library(FactoMineR)
